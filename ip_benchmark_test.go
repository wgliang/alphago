package alphago

import (
	"testing"
)

//  +-------------------------------------------------------------------------+
//  |  Operation  |    Cycles    | Time(ns)/op | Memory(B)/op |  Allocate/op  |
//  +=========================================================================+
//  |   Ip2Long   |   20000000   |     84.4    |       16     |       1       |
//  +-------------------------------------------------------------------------+
func Benchmark_Ip2Long_Test(b *testing.B) {
	for i := 0; i < b.N; i++ {
		Ip2Long(startIp)
	}
}

//  +-------------------------------------------------------------------------+
//  |  Operation  |    Cycles    | Time(ns)/op | Memory(B)/op |  Allocate/op  |
//  +=========================================================================+
//  |   Long2Ip   |  10000000    |     207     |     24       |       5       |
//  +-------------------------------------------------------------------------+
func Benchmark_Long2Ip_Test(b *testing.B) {
	for i := 0; i < b.N; i++ {
		Long2Ip(longIp)
	}
}

//  +-------------------------------------------------------------------------+
//  |  Operation  |    Cycles    | Time(ns)/op | Memory(B)/op |  Allocate/op  |
//  +=========================================================================+
//  |   IpRange   |    3000000   |      453    |      72      |       8       |
//  +-------------------------------------------------------------------------+
func Benchmark_IpRange_Test(b *testing.B) {
	for i := 0; i < b.N; i++ {
		IpRange(startIp, endIp)
	}
}

//  +-------------------------------------------------------------------------+
//  |  Operation  |    Cycles    | Time(ns)/op | Memory(B)/op |  Allocate/op  |
//  +=========================================================================+
//  |  IsPrivate  |   3000000    |     524     |      104     |       7       |
//  +-------------------------------------------------------------------------+
func Benchmark_IsPrivate_Test(b *testing.B) {
	for i := 0; i < b.N; i++ {
		IsPrivate(startIp)
	}
}
