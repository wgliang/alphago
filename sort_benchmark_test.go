package alphago

import (
	"testing"
)

var (
	listInts = ListInt{2, 8, 5, 1, 7, 4, 3, 9, 6, 0}
)

//  +-------------------------------------------------------------------------+
//  |  Operation  |    Cycles    | Time(ns)/op | Memory(B)/op |  Allocate/op  |
//  +=========================================================================+
//  |   InsertSort   |   20000000   |     108    |       32     |       1       |
//  +-------------------------------------------------------------------------+
func Benchmark_InsertSort_Ints_Test(b *testing.B) {
	for i := 0; i < b.N; i++ {
		InsertSort(listInts)
	}
}

//  +-------------------------------------------------------------------------+
//  |  Operation  |    Cycles    | Time(ns)/op | Memory(B)/op |  Allocate/op  |
//  +=========================================================================+
//  |   BubbleSort   |   5000000   |     277    |       32     |       1       |
//  +-------------------------------------------------------------------------+
func Benchmark_BubbleSort_Ints_Test(b *testing.B) {
	for i := 0; i < b.N; i++ {
		BubbleSort(listInts)
	}
}

//  +-------------------------------------------------------------------------+
//  |  Operation  |    Cycles    | Time(ns)/op | Memory(B)/op |  Allocate/op  |
//  +=========================================================================+
//  |   SelectSort   |   5000000   |     317    |       32     |       1       |
//  +-------------------------------------------------------------------------+
func Benchmark_SelectSort_Ints_Test(b *testing.B) {
	for i := 0; i < b.N; i++ {
		SelectSort(listInts)
	}
}

//  +-------------------------------------------------------------------------+
//  |  Operation  |    Cycles    | Time(ns)/op | Memory(B)/op |  Allocate/op  |
//  +=========================================================================+
//  |   QuickSort   |   3000000   |     406    |       32     |       1       |
//  +-------------------------------------------------------------------------+
func Benchmark_QuickSort_Ints_Test(b *testing.B) {
	for i := 0; i < b.N; i++ {
		QuickSort(listInts)
	}
}

//  +-------------------------------------------------------------------------+
//  |  Operation  |    Cycles    | Time(ns)/op | Memory(B)/op |  Allocate/op  |
//  +=========================================================================+
//  |   Reverse   |   20000000   |     80.7    |       32     |       1       |
//  +-------------------------------------------------------------------------+
func Benchmark_Reverse_Ints_Test(b *testing.B) {
	for i := 0; i < b.N; i++ {
		Reverse(listInts)
	}
}

var (
	listStrings = ListString{"2", "8", "5", "1", "7", "4", "3", "9", "6", "0"}
)

//  +-------------------------------------------------------------------------+
//  |  Operation  |    Cycles    | Time(ns)/op | Memory(B)/op |  Allocate/op  |
//  +=========================================================================+
//  |   InsertSort   |   10000000   |     177    |       32     |       1       |
//  +-------------------------------------------------------------------------+
func Benchmark_InsertSort_Strings_Test(b *testing.B) {
	for i := 0; i < b.N; i++ {
		InsertSort(listStrings)
	}
}

//  +-------------------------------------------------------------------------+
//  |  Operation  |    Cycles    | Time(ns)/op | Memory(B)/op |  Allocate/op  |
//  +=========================================================================+
//  |   BubbleSort   |   2000000   |     635    |       32     |       1       |
//  +-------------------------------------------------------------------------+
func Benchmark_BubbleSort_Strings_Test(b *testing.B) {
	for i := 0; i < b.N; i++ {
		BubbleSort(listStrings)
	}
}

//  +-------------------------------------------------------------------------+
//  |  Operation  |    Cycles    | Time(ns)/op | Memory(B)/op |  Allocate/op  |
//  +=========================================================================+
//  |   SelectSort   |   2000000   |     703    |       32     |       1       |
//  +-------------------------------------------------------------------------+
func Benchmark_SelectSort_Strings_Test(b *testing.B) {
	for i := 0; i < b.N; i++ {
		SelectSort(listStrings)
	}
}

//  +-------------------------------------------------------------------------+
//  |  Operation  |    Cycles    | Time(ns)/op | Memory(B)/op |  Allocate/op  |
//  +=========================================================================+
//  |   QuickSort   |   2000000   |     826    |       32     |       1       |
//  +-------------------------------------------------------------------------+
func Benchmark_QuickSort_Strings_Test(b *testing.B) {
	for i := 0; i < b.N; i++ {
		QuickSort(listStrings)
	}
}

//  +-------------------------------------------------------------------------+
//  |  Operation  |    Cycles    | Time(ns)/op | Memory(B)/op |  Allocate/op  |
//  +=========================================================================+
//  |   Reverse   |   20000000   |     92.7    |       32     |       1       |
//  +-------------------------------------------------------------------------+
func Benchmark_Reverse_Strings_Test(b *testing.B) {
	for i := 0; i < b.N; i++ {
		Reverse(listStrings)
	}
}

//  +-------------------------------------------------------------------------+
//  |  Operation  |    Cycles    | Time(ns)/op | Memory(B)/op |  Allocate/op  |
//  +=========================================================================+
//  |   InsertSort   |   20000000   |     100    |       32     |       1       |
//  +-------------------------------------------------------------------------+
func Benchmark_InsertSort_Structs_Test(b *testing.B) {
	for i := 0; i < b.N; i++ {
		InsertSort(listStructs)
	}
}

//  +-------------------------------------------------------------------------+
//  |  Operation  |    Cycles    | Time(ns)/op | Memory(B)/op |  Allocate/op  |
//  +=========================================================================+
//  |   BubbleSort   |   5000000   |     279    |       32     |       1       |
//  +-------------------------------------------------------------------------+
func Benchmark_BubbleSort_Structs_Test(b *testing.B) {
	for i := 0; i < b.N; i++ {
		BubbleSort(listStructs)
	}
}

//  +-------------------------------------------------------------------------+
//  |  Operation  |    Cycles    | Time(ns)/op | Memory(B)/op |  Allocate/op  |
//  +=========================================================================+
//  |   SelectSort   |   5000000   |     362    |       32     |       1       |
//  +-------------------------------------------------------------------------+
func Benchmark_SelectSort_Structs_Test(b *testing.B) {
	for i := 0; i < b.N; i++ {
		SelectSort(listStructs)
	}
}

//  +-------------------------------------------------------------------------+
//  |  Operation  |    Cycles    | Time(ns)/op | Memory(B)/op |  Allocate/op  |
//  +=========================================================================+
//  |   QuickSort   |   3000000   |     442    |       32     |       1       |
//  +-------------------------------------------------------------------------+
func Benchmark_QuickSort_Structs_Test(b *testing.B) {
	for i := 0; i < b.N; i++ {
		QuickSort(listStructs)
	}
}

//  +-------------------------------------------------------------------------+
//  |  Operation  |    Cycles    | Time(ns)/op | Memory(B)/op |  Allocate/op  |
//  +=========================================================================+
//  |   Reverse   |   20000000   |     105    |       32     |       1       |
//  +-------------------------------------------------------------------------+
func Benchmark_Reverse_Structs_Test(b *testing.B) {
	for i := 0; i < b.N; i++ {
		Reverse(listStructs)
	}
}
